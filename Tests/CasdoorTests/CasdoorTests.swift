import XCTest
@testable import Casdoor
import AsyncHTTPClient
import Foundation
import NIOCore
import NIOPosix

final class CasdoorTests: XCTestCase {
    static let jwtKey = """
-----BEGIN CERTIFICATE-----
MIIE+TCCAuGgAwIBAgIDAeJAMA0GCSqGSIb3DQEBCwUAMDYxHTAbBgNVBAoTFENh
c2Rvb3IgT3JnYW5pemF0aW9uMRUwEwYDVQQDEwxDYXNkb29yIENlcnQwHhcNMjEx
MDE1MDgxMTUyWhcNNDExMDE1MDgxMTUyWjA2MR0wGwYDVQQKExRDYXNkb29yIE9y
Z2FuaXphdGlvbjEVMBMGA1UEAxMMQ2FzZG9vciBDZXJ0MIICIjANBgkqhkiG9w0B
AQEFAAOCAg8AMIICCgKCAgEAsInpb5E1/ym0f1RfSDSSE8IR7y+lw+RJjI74e5ej
rq4b8zMYk7HeHCyZr/hmNEwEVXnhXu1P0mBeQ5ypp/QGo8vgEmjAETNmzkI1NjOQ
CjCYwUrasO/f/MnI1C0j13vx6mV1kHZjSrKsMhYY1vaxTEP3+VB8Hjg3MHFWrb07
uvFMCJe5W8+0rKErZCKTR8+9VB3janeBz//zQePFVh79bFZate/hLirPK0Go9P1g
OvwIoC1A3sarHTP4Qm/LQRt0rHqZFybdySpyWAQvhNaDFE7mTstRSBb/wUjNCUBD
PTSLVjC04WllSf6Nkfx0Z7KvmbPstSj+btvcqsvRAGtvdsB9h62Kptjs1Yn7GAuo
I3qt/4zoKbiURYxkQJXIvwCQsEftUuk5ew5zuPSlDRLoLByQTLbx0JqLAFNfW3g/
pzSDjgd/60d6HTmvbZni4SmjdyFhXCDb1Kn7N+xTojnfaNkwep2REV+RMc0fx4Gu
hRsnLsmkmUDeyIZ9aBL9oj11YEQfM2JZEq+RVtUx+wB4y8K/tD1bcY+IfnG5rBpw
IDpS262boq4SRSvb3Z7bB0w4ZxvOfJ/1VLoRftjPbLIf0bhfr/AeZMHpIKOXvfz4
yE+hqzi68wdF0VR9xYc/RbSAf7323OsjYnjjEgInUtRohnRgCpjIk/Mt2Kt84Kb0
wn8CAwEAAaMQMA4wDAYDVR0TAQH/BAIwADANBgkqhkiG9w0BAQsFAAOCAgEAn2lf
DKkLX+F1vKRO/5gJ+Plr8P5NKuQkmwH97b8CS2gS1phDyNgIc4/LSdzuf4Awe6ve
C06lVdWSIis8UPUPdjmT2uMPSNjwLxG3QsrimMURNwFlLTfRem/heJe0Zgur9J1M
8haawdSdJjH2RgmFoDeE2r8NVRfhbR8KnCO1ddTJKuS1N0/irHz21W4jt4rxzCvl
2nR42Fybap3O/g2JXMhNNROwZmNjgpsF7XVENCSuFO1jTywLaqjuXCg54IL7XVLG
omKNNNcc8h1FCeKj/nnbGMhodnFWKDTsJcbNmcOPNHo6ixzqMy/Hqc+mWYv7maAG
Jtevs3qgMZ8F9Qzr3HpUc6R3ZYYWDY/xxPisuKftOPZgtH979XC4mdf0WPnOBLqL
2DJ1zaBmjiGJolvb7XNVKcUfDXYw85ZTZQ5b9clI4e+6bmyWqQItlwt+Ati/uFEV
XzCj70B4lALX6xau1kLEpV9O1GERizYRz5P9NJNA7KoO5AVMp9w0DQTkt+LbXnZE
HHnWKy8xHQKZF9sR7YBPGLs/Ac6tviv5Ua15OgJ/8dLRZ/veyFfGo2yZsI+hKVU5
nCCJHBcAyFnm1hdvdwEdH33jDBjNB6ciotJZrf/3VYaIWSalADosHAgMWfXuWP+h
8XKXmzlxuHbTMQYtZPDgspS5aK+S4Q9wb8RRAYo=
-----END CERTIFICATE-----
"""
    static var eventLoopGroup: EventLoopGroup!
    static var client: CasdoorClient!
    static var casdoor: Casdoor!
    override func setUp() {
        Self.eventLoopGroup = MultiThreadedEventLoopGroup(numberOfThreads: System.coreCount)
        Self.client = CasdoorClient.init(options: .init(requestLogLevel: .info, errorLogLevel: .debug), httpClientProvider: .createNewWithEventLoopGroup(Self.eventLoopGroup), logger: .init(label: "casdoor-test"))
        Self.casdoor = .init(client: Self.client, config: .init(
            endpoint: "http://localhost:8000",
            clientID: "ced4d6db2f4644b85a75",
            organizationName: "organization_6qvtvh",
            redirectUri: "http://localhost:9000/callback",
            appName: "application_y38644",
            jwtSecret: Self.jwtKey.data(using: .utf8)!
            ))
    }
    override func tearDown() {
        Self.client.shutdown(){ print($0.debugDescription)}
    }
    
    func testGenerateCodeChallenge() throws {
        // This is an example of a functional test case.
        // Use XCTAssert and related functions to verify your tests produce the correct
        // results.
//        XCTAssertEqual(Casdoor().text, "Hello, World!")
        XCTAssertEqual(Utils.generateCodeChallenge("D3gKN2iLALQD54_Bv~VFdPD.QOnUNqVpm8oElgXwQqV7r1JZSPjzuOx2yLgGJB7vRoKyIs_Vpx8t9G~agd5D"), "W_u1RWjPCXdEF0aSGQ-OSdhRnlsjyk-wS5hH-juI9ec")
    }
    func testVerfiedToken() throws {
        let token = "eyJhbGciOiJSUzI1NiIsImtpZCI6ImNlcnQtYnVpbHQtaW4iLCJ0eXAiOiJKV1QifQ.eyJvd25lciI6Im9yZ2FuaXphdGlvbl82cXZ0dmgiLCJuYW1lIjoieGlhb2JlaSIsImNyZWF0ZWRUaW1lIjoiMjAyMi0wMy0wOFQwNToxMDo0MloiLCJ1cGRhdGVkVGltZSI6IiIsImlkIjoiMTEyZDljMmItYjJlYy00MTVmLTlmMTktODBiOTQzODE3YWJkIiwidHlwZSI6Im5vcm1hbC11c2VyIiwicGFzc3dvcmQiOiIiLCJwYXNzd29yZFNhbHQiOiIiLCJkaXNwbGF5TmFtZSI6IlhpYW9iZWkiLCJmaXJzdE5hbWUiOiIiLCJsYXN0TmFtZSI6IiIsImF2YXRhciI6Imh0dHBzOi8vY2FzYmluLm9yZy9pbWcvY2FzYmluLnN2ZyIsInBlcm1hbmVudEF2YXRhciI6IiIsImVtYWlsIjoiIiwicGhvbmUiOiIiLCJsb2NhdGlvbiI6IiIsImFkZHJlc3MiOltdLCJhZmZpbGlhdGlvbiI6IiIsInRpdGxlIjoiIiwiaWRDYXJkVHlwZSI6IiIsImlkQ2FyZCI6IiIsImhvbWVwYWdlIjoiIiwiYmlvIjoiIiwicmVnaW9uIjoiIiwibGFuZ3VhZ2UiOiIiLCJnZW5kZXIiOiIiLCJiaXJ0aGRheSI6IiIsImVkdWNhdGlvbiI6IiIsInNjb3JlIjoyMDAwLCJrYXJtYSI6MCwicmFua2luZyI6MiwiaXNEZWZhdWx0QXZhdGFyIjpmYWxzZSwiaXNPbmxpbmUiOmZhbHNlLCJpc0FkbWluIjpmYWxzZSwiaXNHbG9iYWxBZG1pbiI6ZmFsc2UsImlzRm9yYmlkZGVuIjpmYWxzZSwiaXNEZWxldGVkIjpmYWxzZSwic2lnbnVwQXBwbGljYXRpb24iOiJhcHBsaWNhdGlvbl95Mzg2NDQiLCJoYXNoIjoiIiwicHJlSGFzaCI6IiIsImNyZWF0ZWRJcCI6IiIsImxhc3RTaWduaW5UaW1lIjoiIiwibGFzdFNpZ25pbklwIjoiIiwiZ2l0aHViIjoiIiwiZ29vZ2xlIjoiIiwicXEiOiIiLCJ3ZWNoYXQiOiIiLCJmYWNlYm9vayI6IiIsImRpbmd0YWxrIjoiIiwid2VpYm8iOiIiLCJnaXRlZSI6IiIsImxpbmtlZGluIjoiIiwid2Vjb20iOiIiLCJsYXJrIjoiIiwiZ2l0bGFiIjoiIiwiYWRmcyI6IiIsImJhaWR1IjoiIiwiaW5mb2Zsb3ciOiIiLCJhcHBsZSI6IiIsImF6dXJlYWQiOiIiLCJzbGFjayI6IiIsInN0ZWFtIjoiIiwibGRhcCI6IiIsInByb3BlcnRpZXMiOnt9LCJub25jZSI6Im81YlZWc19DelUiLCJzY29wZSI6InJlYWQiLCJpc3MiOiJodHRwOi8vbG9jYWxob3N0OjgwMDAiLCJzdWIiOiIxMTJkOWMyYi1iMmVjLTQxNWYtOWYxOS04MGI5NDM4MTdhYmQiLCJhdWQiOlsiY2VkNGQ2ZGIyZjQ2NDRiODVhNzUiXSwiZXhwIjoxNjQ3MzQ3OTgwLCJuYmYiOjE2NDY3NDMxODAsImlhdCI6MTY0Njc0MzE4MH0.DfrGOgG8_ji5tN-Lan1KKq3XGPdQcfD1JNCh-g4MVz6vvckki7TwJ3ik6wWAb1g_D4HBX0_or6MIjal0V81I6qu8_LsHRqP2e4NY3wzGF5GHZ-5zEqpvzCUMOt-UMDOf7Z1iqAqEGWCR_uaFkl9fY0Wu8Q_yQNzSZpFnmlWObZDH180lmzD5GGWMfalJr67XK1HoZh3aDEycrXODugElPpD3k77To5o6cXbZH38hourdq9CGGXi-EDM3OknY_Zjw9C34Bu53OpG9s6QF7ceeJRp7E0jgUYUBth5Rul_CTNZFGccPtab0oEMVb0xAkbqj8caghOpu_obrB-YrgvCpZndsTpagfRPfHL8OaldCEMQeBy9cPVC8638qcYZIacG99WEZwSLL-tscuyIAxFynWRhMJrykQlN8DR6zA6AdGDPccsR0w-i0_nNQepaegKBpRw3ej77stQ4RpAfnmhUuiw8YF2F16nuqna7LSpJ6kfR88L2r2mZb142Vjcz3meGQBn6fuJUOUynlVb4-H1ZQAZ-J3KdUeWWSO2Qh_5D4vYmMAyReyXq5vf_LxZ_1sNlX0L8uLGB9xTIqcldGaJsSAAxPSv48Yw34QL7GuBALZ2mQCgHioKUfwrKlhjGQanE1OBApUjdPo_Rawjd45ewY1NhWQNa9My60twVzdpUasB0"
      let user = try Self.casdoor.verifyToken(token: token)
        XCTAssertEqual(user.name, "xiaobei")
    }
    
    func testRenewToken() throws {
        let token = "eyJhbGciOiJSUzI1NiIsImtpZCI6ImNlcnQtYnVpbHQtaW4iLCJ0eXAiOiJKV1QifQ.eyJvd25lciI6Im9yZ2FuaXphdGlvbl82cXZ0dmgiLCJuYW1lIjoieGlhb2JlaSIsImNyZWF0ZWRUaW1lIjoiMjAyMi0wMy0wOFQwNToxMDo0MloiLCJ1cGRhdGVkVGltZSI6IiIsImlkIjoiMTEyZDljMmItYjJlYy00MTVmLTlmMTktODBiOTQzODE3YWJkIiwidHlwZSI6Im5vcm1hbC11c2VyIiwicGFzc3dvcmQiOiIiLCJwYXNzd29yZFNhbHQiOiIiLCJkaXNwbGF5TmFtZSI6IlhpYW9iZWkiLCJmaXJzdE5hbWUiOiIiLCJsYXN0TmFtZSI6IiIsImF2YXRhciI6Imh0dHBzOi8vY2FzYmluLm9yZy9pbWcvY2FzYmluLnN2ZyIsInBlcm1hbmVudEF2YXRhciI6IiIsImVtYWlsIjoiIiwicGhvbmUiOiIiLCJsb2NhdGlvbiI6IiIsImFkZHJlc3MiOltdLCJhZmZpbGlhdGlvbiI6IiIsInRpdGxlIjoiIiwiaWRDYXJkVHlwZSI6IiIsImlkQ2FyZCI6IiIsImhvbWVwYWdlIjoiIiwiYmlvIjoiIiwicmVnaW9uIjoiIiwibGFuZ3VhZ2UiOiIiLCJnZW5kZXIiOiIiLCJiaXJ0aGRheSI6IiIsImVkdWNhdGlvbiI6IiIsInNjb3JlIjoyMDAwLCJrYXJtYSI6MCwicmFua2luZyI6MiwiaXNEZWZhdWx0QXZhdGFyIjpmYWxzZSwiaXNPbmxpbmUiOmZhbHNlLCJpc0FkbWluIjpmYWxzZSwiaXNHbG9iYWxBZG1pbiI6ZmFsc2UsImlzRm9yYmlkZGVuIjpmYWxzZSwiaXNEZWxldGVkIjpmYWxzZSwic2lnbnVwQXBwbGljYXRpb24iOiJhcHBsaWNhdGlvbl95Mzg2NDQiLCJoYXNoIjoiIiwicHJlSGFzaCI6IiIsImNyZWF0ZWRJcCI6IiIsImxhc3RTaWduaW5UaW1lIjoiIiwibGFzdFNpZ25pbklwIjoiIiwiZ2l0aHViIjoiIiwiZ29vZ2xlIjoiIiwicXEiOiIiLCJ3ZWNoYXQiOiIiLCJmYWNlYm9vayI6IiIsImRpbmd0YWxrIjoiIiwid2VpYm8iOiIiLCJnaXRlZSI6IiIsImxpbmtlZGluIjoiIiwid2Vjb20iOiIiLCJsYXJrIjoiIiwiZ2l0bGFiIjoiIiwiYWRmcyI6IiIsImJhaWR1IjoiIiwiaW5mb2Zsb3ciOiIiLCJhcHBsZSI6IiIsImF6dXJlYWQiOiIiLCJzbGFjayI6IiIsInN0ZWFtIjoiIiwibGRhcCI6IiIsInByb3BlcnRpZXMiOnt9LCJub25jZSI6Im81YlZWc19DelUiLCJzY29wZSI6InJlYWQiLCJpc3MiOiJodHRwOi8vbG9jYWxob3N0OjgwMDAiLCJzdWIiOiIxMTJkOWMyYi1iMmVjLTQxNWYtOWYxOS04MGI5NDM4MTdhYmQiLCJhdWQiOlsiY2VkNGQ2ZGIyZjQ2NDRiODVhNzUiXSwiZXhwIjoxNjQ3MzQ3OTgwLCJuYmYiOjE2NDY3NDMxODAsImlhdCI6MTY0Njc0MzE4MH0.DfrGOgG8_ji5tN-Lan1KKq3XGPdQcfD1JNCh-g4MVz6vvckki7TwJ3ik6wWAb1g_D4HBX0_or6MIjal0V81I6qu8_LsHRqP2e4NY3wzGF5GHZ-5zEqpvzCUMOt-UMDOf7Z1iqAqEGWCR_uaFkl9fY0Wu8Q_yQNzSZpFnmlWObZDH180lmzD5GGWMfalJr67XK1HoZh3aDEycrXODugElPpD3k77To5o6cXbZH38hourdq9CGGXi-EDM3OknY_Zjw9C34Bu53OpG9s6QF7ceeJRp7E0jgUYUBth5Rul_CTNZFGccPtab0oEMVb0xAkbqj8caghOpu_obrB-YrgvCpZndsTpagfRPfHL8OaldCEMQeBy9cPVC8638qcYZIacG99WEZwSLL-tscuyIAxFynWRhMJrykQlN8DR6zA6AdGDPccsR0w-i0_nNQepaegKBpRw3ej77stQ4RpAfnmhUuiw8YF2F16nuqna7LSpJ6kfR88L2r2mZb142Vjcz3meGQBn6fuJUOUynlVb4-H1ZQAZ-J3KdUeWWSO2Qh_5D4vYmMAyReyXq5vf_LxZ_1sNlX0L8uLGB9xTIqcldGaJsSAAxPSv48Yw34QL7GuBALZ2mQCgHioKUfwrKlhjGQanE1OBApUjdPo_Rawjd45ewY1NhWQNa9My60twVzdpUasB0"
         let tokens = Self.casdoor.renewToken(refreshToken: token)
         XCTAssertNoThrow(try tokens.wait())
    }
    func testLogout() throws {
        let idToken = "eyJhbGciOiJSUzI1NiIsImtpZCI6ImNlcnQtYnVpbHQtaW4iLCJ0eXAiOiJKV1QifQ.eyJvd25lciI6Im9yZ2FuaXphdGlvbl82cXZ0dmgiLCJuYW1lIjoieGlhb2JlaSIsImNyZWF0ZWRUaW1lIjoiMjAyMi0wMy0wOFQwNToxMDo0MloiLCJ1cGRhdGVkVGltZSI6IiIsImlkIjoiMTEyZDljMmItYjJlYy00MTVmLTlmMTktODBiOTQzODE3YWJkIiwidHlwZSI6Im5vcm1hbC11c2VyIiwicGFzc3dvcmQiOiIiLCJwYXNzd29yZFNhbHQiOiIiLCJkaXNwbGF5TmFtZSI6IlhpYW9iZWkiLCJmaXJzdE5hbWUiOiIiLCJsYXN0TmFtZSI6IiIsImF2YXRhciI6Imh0dHBzOi8vY2FzYmluLm9yZy9pbWcvY2FzYmluLnN2ZyIsInBlcm1hbmVudEF2YXRhciI6IiIsImVtYWlsIjoiIiwicGhvbmUiOiIiLCJsb2NhdGlvbiI6IiIsImFkZHJlc3MiOltdLCJhZmZpbGlhdGlvbiI6IiIsInRpdGxlIjoiIiwiaWRDYXJkVHlwZSI6IiIsImlkQ2FyZCI6IiIsImhvbWVwYWdlIjoiIiwiYmlvIjoiIiwicmVnaW9uIjoiIiwibGFuZ3VhZ2UiOiIiLCJnZW5kZXIiOiIiLCJiaXJ0aGRheSI6IiIsImVkdWNhdGlvbiI6IiIsInNjb3JlIjoyMDAwLCJrYXJtYSI6MCwicmFua2luZyI6MiwiaXNEZWZhdWx0QXZhdGFyIjpmYWxzZSwiaXNPbmxpbmUiOmZhbHNlLCJpc0FkbWluIjpmYWxzZSwiaXNHbG9iYWxBZG1pbiI6ZmFsc2UsImlzRm9yYmlkZGVuIjpmYWxzZSwiaXNEZWxldGVkIjpmYWxzZSwic2lnbnVwQXBwbGljYXRpb24iOiJhcHBsaWNhdGlvbl95Mzg2NDQiLCJoYXNoIjoiIiwicHJlSGFzaCI6IiIsImNyZWF0ZWRJcCI6IiIsImxhc3RTaWduaW5UaW1lIjoiIiwibGFzdFNpZ25pbklwIjoiIiwiZ2l0aHViIjoiIiwiZ29vZ2xlIjoiIiwicXEiOiIiLCJ3ZWNoYXQiOiIiLCJmYWNlYm9vayI6IiIsImRpbmd0YWxrIjoiIiwid2VpYm8iOiIiLCJnaXRlZSI6IiIsImxpbmtlZGluIjoiIiwid2Vjb20iOiIiLCJsYXJrIjoiIiwiZ2l0bGFiIjoiIiwiYWRmcyI6IiIsImJhaWR1IjoiIiwiaW5mb2Zsb3ciOiIiLCJhcHBsZSI6IiIsImF6dXJlYWQiOiIiLCJzbGFjayI6IiIsInN0ZWFtIjoiIiwibGRhcCI6IiIsInByb3BlcnRpZXMiOnt9LCJub25jZSI6InpxcXpUaFA0R0ciLCJzY29wZSI6InJlYWQiLCJpc3MiOiJodHRwOi8vbG9jYWxob3N0OjgwMDAiLCJzdWIiOiIxMTJkOWMyYi1iMmVjLTQxNWYtOWYxOS04MGI5NDM4MTdhYmQiLCJhdWQiOlsiY2VkNGQ2ZGIyZjQ2NDRiODVhNzUiXSwiZXhwIjoxNjQ3Mzk3NDQ0LCJuYmYiOjE2NDY3OTI2NDQsImlhdCI6MTY0Njc5MjY0NH0.jVNC-quWNSvrNt4VElL56lhWPX5r_lSzETSBtXH9p0GQIFTSg8r-0o9gGt8-860qC7Mi7g9YU0A1Aysq5HK2msCPN1AE97VwJrQykJQnThaN2VvFBtuAHaqGwmj76GZhqGr58dqeMYJL6VyYW5DNpfvTdFusti_cRcFU9NGnVXEvCelPsUo5US_Ctu4JURdcCk23MADdQQRzGhHm7I6NGc8oelc5BVUaslvWPNYZLvHInjTp_A2WT8EF7Og3VuZxKBUrt1TRvwHlhDlDrz-oBbYgzTQjHX5M6CKZtj0ve8IjGGk7gpleOUNYBgLegVlsKc-8gSGNzebpgT77OBELcfQ4x33uOzwg3sBmSZQS6J8lfvg3GnBHgh4v8e8YZvdC9jxBnolrVYjDbfjjs7--0Yq42DUzZQ4TjOQhiHkj-DBbEEC8PMzK0ZghjRxXxNehigALTW_WjJKGycyVoIJvZOlUAyRzAen22n7jU_-FtgQNFzC757mhzf8xd2pbaTDxZskoMr52-huE1L6qs1x0TXnM0sXiShvnULDwjOz8sIp5n0cSVxNHEeq1rOjyMtdzXasZFC_xxYo6-gGMDaqDGLNXY557ixvwxtRolcx-fZHal4l49bzuJdiln1JhnEJAeGMPbyQE5upjwG0fT-9rBWc6iKMeXUB4bDALIm2rTkI"
         XCTAssertTrue(try Self.casdoor.logout(idToken: idToken).wait())
    }
    
}
